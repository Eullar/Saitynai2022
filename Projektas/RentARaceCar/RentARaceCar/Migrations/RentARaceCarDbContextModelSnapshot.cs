// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentARaceCar.DbContext;

#nullable disable

namespace RentARaceCar.Migrations
{
    [DbContext(typeof(RentARaceCarDbContext))]
    partial class RentARaceCarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RentARaceCar.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("DrivetrainType")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RentOfficeId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TransmissionType")
                        .HasColumnType("int");

                    b.Property<int>("TyreCompound")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentOfficeId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("RentARaceCar.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CarId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RentARaceCar.Models.RentOffice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RentOffices");
                });

            modelBuilder.Entity("RentARaceCar.Models.Car", b =>
                {
                    b.HasOne("RentARaceCar.Models.RentOffice", "RentOffice")
                        .WithMany("Cars")
                        .HasForeignKey("RentOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentOffice");
                });

            modelBuilder.Entity("RentARaceCar.Models.Order", b =>
                {
                    b.HasOne("RentARaceCar.Models.Car", "Car")
                        .WithMany("Orders")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("RentARaceCar.Models.Car", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RentARaceCar.Models.RentOffice", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
